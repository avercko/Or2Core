@model CreateOpenIdApplicationViewModel
@using Orchard.OpenId.ViewModels;
@using Orchard.OpenId.Models;

<h1>@RenderTitleSegments(T["Create OpenId Application"])</h1>

<div asp-validation-summary="ModelOnly"></div>
<form asp-action="Create" method="post">
    <div class="form-group" asp-validation-class-for="ClientId">
        <label asp-for="ClientId">@T["Client Id"]</label>
        <span asp-validation-for="ClientId" class="text-danger">@T["The Client Id is required."]</span>
        <input asp-for="ClientId" class="form-control" autofocus />
    </div>
    <div class="form-group" asp-validation-class-for="DisplayName">
        <label asp-for="DisplayName">@T["Display Name"]</label>
        <span asp-validation-for="DisplayName" class="text-danger">@T["The Display Name is required."]</span>
        <input asp-for="DisplayName" class="form-control" autofocus />
    </div>
    <div class="form-group" asp-validation-class-for="RedirectUri">
        <label asp-for="RedirectUri">@T["Redirect URI"]</label>
        <span asp-validation-for="RedirectUri" class="text-danger">@T["The Redirect URI is required."]</span>
        <input asp-for="RedirectUri" class="form-control" autofocus />
    </div>
    <div class="form-group" asp-validation-class-for="LogoutRedirectUri">
        <label asp-for="LogoutRedirectUri">@T["Logout Redirect URI"]</label>
        <span asp-validation-for="LogoutRedirectUri" class="text-danger">@T["The Logout Redirect URI is required."]</span>
        <input asp-for="LogoutRedirectUri" class="form-control" autofocus />
    </div>
    <div class="form-group" asp-validation-class-for="Password">
        <label asp-for="Password">@T["Password"]</label>
        <span asp-validation-for="Password" class="text-danger">@T["The Password is required."]</span>
        <input asp-for="Password" class="form-control" autofocus />
    </div>
    <div class="form-group" asp-validation-class-for="ConfirmPassword">
        <label asp-for="ConfirmPassword">@T["Confirm Password"]</label>
        <span asp-validation-for="Password" class="text-danger">@T["The Confirm Password is required."]</span>
        <input asp-for="ConfirmPassword" class="form-control" autofocus />
    </div>
    <div class="form-group">
        <label asp-for="Type">@T["Type"]</label>                
        <select asp-for="Type" class="form-control">
            <option value="@ClientType.Confidential">@ClientType.Confidential.ToString()</option>
            <option value="@ClientType.Public">@ClientType.Public.ToString()</option>
        </select>        
    </div>
    
    @{
        var classes = Model.Type == ClientType.Public ? "form-group collapse" : "form-group";
    }
    <div class="@classes"  id="RoleGroup" name="RoleGroup">
        <h6>@T["Roles"]</h6>
        @for (var i = 0; i < Model.RoleEntries.Count; i++)
        {
            <div class="form-check">
                <label class="form-check-label" asp-for="RoleEntries[i].Selected">

                    <input class="form-check-input" type="checkbox" asp-for="RoleEntries[i].Selected" />
                    <input type="hidden" asp-for="RoleEntries[i].Name" />
                    @Model.RoleEntries[i].Name
                </label>
            </div>            
        }        
    </div>
    <fieldset>
        <div class="form-group">
            <button class="btn btn-primary" type="submit">@T["Create"]</button>
            <a class="btn btn-secondary" asp-route-action="Index">@T["Cancel"]</a>
        </div>
    </fieldset>
</form>
<script at="Foot" type="text/javascript">
//<![CDATA[
    $("#Type").change(function () {
        $("#RoleGroup").toggle("slow");
    });
//]]>
</script>